name Fruit { self =>
  type EqT = Fruit
}

name TakesFruit { self =>
  type T = Fruit
  def meth(x: Fruit { type EqT = Fruit }): Top
}

let takes: TakesFruit = undefined in
let fruit: Fruit = undefined in

// ok (thanks to expansion):
assert Fruit <: Fruit { type EqT = Fruit { type EqT = Fruit } }

// ok:
// takes.meth(fruit)

// error: takes.T not unfolded during expansion
// assert takes.T <: takes.T { type EqT = Fruit }
// 0