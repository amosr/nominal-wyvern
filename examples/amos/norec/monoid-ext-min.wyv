name Monoid {z =>
  type T >= Bot
}

name Pair { z =>
  type A >= Bot
  type B >= Bot
}

name PairMonoid { z =>
  type A >= Bot
  type B >= Bot
  // What? Why no type A?
  // > nominal-wyvern: monad pattern match fail: this program doesn't type: unknown type ("A",[])
  type T = Pair { type A = z.A, type B = z.B }
}

subtype PairMonoid <: Monoid

0
