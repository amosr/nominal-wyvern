name A {z => }
name B {z => }
name C {z => }
subtype B <: A
subtype C <: B

name N1 {z => type T <= Top}
name N2 {z => type T <= A}
name N3 {z => type T <= A}
subtype N1 {type T <= B} <: N2

let q = assert A <: Top 
in let q1 = assertNot N1 {type T <= B} <: N3 //false, no path in graph
in let q2 = assertNot N1 {type T <= A} <: N2 //false, A is not a subtype of B
in let q3 = assertNot N1 {type T <= B} <: N2 {type T <= C} //false, r_2 is too specific
in
Top
