//Is this actually a valid definition?
name A {this =>
  type t <= A{type s <= A {type t = Bot}}
  type s <= Top
}
name B {this =>
  type t <= B
  type s <= Top

}

subtype A <: B
assert A {type t <= A {type s <= A {type t = Bot}}} <: B

//Under new rule:
//A -> B          A{type t <= A {type s <= A {type t = Bot}}} <: B          Top <= Top
//A -> B          A{type t <= A {type s <= A {type t = Bot}}, type s <= Top} <: B{type t <= B, type s <= Top}
//                {type t <= A {type s <= A {type t = Bot}}, type s <= Top} <: {type t <= B, type s <= Top}
//                A {type s <= A {type t = Bot}} <: B // Shouldn't be unfolding t here
// A -> B         A {type t <=  A {type s <= A {type t = Bot}}, type s <= A {type t = Bot}}  <: B {type t = B, type s <= Top}  
// A -> B         {type t <=  A {type s <= A {type t = Bot}}, type s <= A {type t = Bot}} <:  {type t = B, type s <= Top}  
//                A {type s <= A {type t = Bot}} <: B ...


//But does this comes from unwrapping unnecesarry items? Would just restricting to the ones that we need be enough?

