name A {z => 
  type t <= A {type t <= A}
}

name B {z => 
  type t <= B {type t <= B}
  type k <= Top
}

subtype B <: A

assertNot A <: B {type t <= B}

// Typing Derivation under unfold non rec:
// This is actually not a valid program
// A -> B     {type t <= A {type t <= A}} <: {type t <= B}
// A {type t <= A} <: B
// A -> B     {type t <= A} <: {type t <= B {type t <= B}}
// A <: B{{type t <= B}}
// A -> B     {type t <= A {type t <= A}} <: {type t <= B} (loops :()
// ...

